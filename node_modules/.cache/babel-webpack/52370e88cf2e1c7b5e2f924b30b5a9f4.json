{"ast":null,"code":"import { of } from 'rxjs/observable/of';\nimport { AppUserAuth } from './app-user-auth';\nimport { LOGIN_MOCKS } from './login-mocks';\nimport * as i0 from \"@angular/core\";\nexport let SecurityService = /*#__PURE__*/(() => {\n  class SecurityService {\n    constructor() {\n      this.securityObject = new AppUserAuth();\n    }\n\n    resetSecurityObject() {\n      this.securityObject.userName = \"\";\n      this.securityObject.bearerToken = \"\";\n      this.securityObject.isAuthenticated = false;\n      this.securityObject.canAccessProducts = false;\n      this.securityObject.canDeleteComplaint = false;\n      this.securityObject.canSaveProduct = false;\n      this.securityObject.canAccessCategories = false;\n      this.securityObject.canAddCategory = false;\n      localStorage.removeItem(\"bearerToken\");\n    }\n\n    login(entity) {\n      this.resetSecurityObject();\n      Object.assign(this.securityObject, LOGIN_MOCKS.find(user => user.userName.toLowerCase() === entity.userName.toLowerCase()));\n\n      if (this.securityObject.userName !== \"\") {\n        console.log(\"correct\");\n        localStorage.setItem(\"bearerToken\", this.securityObject.bearerToken);\n      }\n\n      return of(this.securityObject);\n    }\n\n    logout() {\n      this.resetSecurityObject();\n    }\n\n  }\n\n  SecurityService.ɵfac = function SecurityService_Factory(t) {\n    return new (t || SecurityService)();\n  };\n\n  SecurityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SecurityService,\n    factory: SecurityService.ɵfac,\n    providedIn: 'root'\n  });\n  return SecurityService;\n})();","map":null,"metadata":{},"sourceType":"module"}